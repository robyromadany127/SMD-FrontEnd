name: Auto Deploy Frontend (Zero Downtime)

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: dev

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 23

    - name: Create .env file before build
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env
        cat .env  # Debug: Pastikan isi .env benar (hapus jika tidak perlu)

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build

    - name: Validate Build Output
      run: |
        if [ ! -d "dist" ] || [ -z "$(ls -A dist)" ]; then
          echo "Build directory is empty!"
          exit 1
        fi

    - name: Debug build output
      run: ls -lah dist

    - name: Set deployment timestamp
      id: set_timestamp
      run: echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Upload build to VPS (Blue-Green Deployment)
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e
          sudo mkdir -p /var/www/frontend/releases
          NEW_RELEASE="/var/www/frontend/releases/${{ env.TIMESTAMP }}"
          sudo mkdir -p $NEW_RELEASE
          echo "Uploading new build to $NEW_RELEASE..."

    - name: SCP Upload to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "dist/*"
        target: "/var/www/frontend/releases/${{ env.TIMESTAMP }}"

    - name: Update Nginx Configuration
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e
          echo "Updating Nginx root path..."
          sudo sed -i 's|root .*;|root /var/www/frontend/current/dist;|' /etc/nginx/sites-available/frontend
          sudo nginx -t && sudo systemctl reload nginx

    - name: Switch Symlink to New Release
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e
          NEW_RELEASE="/var/www/frontend/releases/${{ env.TIMESTAMP }}"
          if [ ! -d "$NEW_RELEASE" ]; then
            echo "Error: New release directory not found!"
            exit 1
          fi
          echo "Switching symlink to $NEW_RELEASE..."
          sudo ln -sfn $NEW_RELEASE /var/www/frontend/current
          sudo systemctl reload nginx
          ls -td /var/www/frontend/releases/* | tail -n +4 | xargs sudo rm -rf
